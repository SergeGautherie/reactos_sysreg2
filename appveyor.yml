image: Ubuntu

environment:
# SSH:   APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgGIoNKEMMl4zlT1qUCZtW4Zk5CgHMFzn0ZszB6vyWn19Dc64yrhCU8AgtdOa2wEoBMRyKHPktkVEn7r7yRBpAF9UjyfWEaMWSLzfPJxOdtmjFDJKx8AYV2bk6o6KWX+jH1qtz+7zqELYdV8UzHgEe1MUpqCI4kJDTSpU6q92MJCiazda0VeFlyYwet9lXrT7pzM0I2tBHQzdD1pvY/vTwAfKw/+ZF0StswIPZfsmM2JeajH94BIYhX1DjhGHWLmqpW6QPTjBGFu1mtFF4P50fhz5JIx57K1Sd7GDtNR+Q3+ICG5nF99I7g+XFoWGjCGZ+LWYdAEu9lEezft8+cQ91
# PuTTY: 
  APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAtPJhVrHblWPjguvbjz4bhzO0QgvogHs8nxXFhXKpr6htEinjuaLSn2acctY/aIv9SMDiAwORisZtZ7HltUvBL0Bl3Zn+bOtqbqkcgTXj2uQJpebCT+FNaHMogbcpu+hZvztoj/59F1e9VnJDz9X32SVJwaO7F/TP7Z32Vcx9Ui+GQ3RnmmnlQI/V8NoQw0sOibnJou3MdZW6fBLIGdZ6WkWsz4SNvymXK6CA+uelVpUWa4z2GHfFSdQP4oIItYwln2FHELwTPiJLP76AyCO3VMDoHMEAjhGkGusnRHQg5oj8tLbmyO+kjW0XVC0W8AXJnkWxWbnHN83O1f+gMqM8zw==
#
  ROS_WGET_BOOTCDREGTEST: https://iso.reactos.org/bootcdregtest/reactos-bootcdregtest-0.4.10-dev-141-g6b6163a-x86-gcc-lin-dbg.iso
  ROS_WGET_LOG2LINES: https://ci.appveyor.com/api/buildjobs/p2xv9370w47k2yc8/artifacts/log2lines-542-8f48ddc-gcc

version: sysreg2.appveyor.{build}
skip_branch_with_pr: true
clone_depth: 5
clone_folder: /sysreg2_workdir

# /sysreg2_workdir : all-in-one
#   /TestRun : .!.

init:
#   - sh: export APPVEYOR_SSH_BLOCK=true
# 
  - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
#
#   - sh: env | sort

install:
  - sh: sudo apt-get -q=2 update
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -q=2 install libvirt-dev libxml2-dev > /dev/null
#
#   - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -q=2 install cpu-checker > /dev/null
 # "INFO: Your CPU does not support KVM extensions" + "KVM acceleration can NOT be used"
#   - sh: sudo /usr/sbin/kvm-ok  || echo {kvm-ok} ExitStatus = $?

build_script:
  - sh: make

after_build:
  - sh: chmod u-w,go-x sysreg2
#
# 
  - sh: ll sysreg2

before_test:
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -q=2 install libvirt-bin qemu-kvm > /dev/null
 # "The user `appveyor' is already a member of `libvirtd'."
#   - sh: sudo adduser $USER libvirtd
#
#   - sh: ll /usr/bin
#
  - sh: mkdir TestRun
  - sh: cd TestRun
#
#   - sh: touch bootcdregtest.iso
#
  - sh: wget --no-verbose --output-document=bootcdregtest.iso "$ROS_WGET_BOOTCDREGTEST"
  - sh: chmod u-w bootcdregtest.iso
#
  - sh: wget --no-verbose --output-document=log2lines "$ROS_WGET_LOG2LINES"
  - sh: chmod u-w+x log2lines
#
#   - sh: ll
# 
  - sh: ll bootcdregtest.iso log2lines

test_script:
#   - sh: ./sysreg2  || echo {sysreg2} ExitStatus = $?
#   - sh: ./log2lines -h  || echo {log2lines} ExitStatus = $?
  - sh: ./log2lines -d bootcdregtest.iso -F
 # "usage" :-/   - sh: ./sysreg2 | ./log2lines -d bootcdregtest.iso -L log2lines.log -m -M -s -U
 # "time  ": to try later...
#
  - sh: ../sysreg2 ../sysreg.xml | ./log2lines -d bootcdregtest.iso -m -M -s -U > log2lines.log
  - sh: echo {sysreg2 log2lines} ExitStatus = "${PIPESTATUS[@]}"
#
#   - sh: set -o pipefail
#   - sh: ../sysreg2 ../sysreg.xml  | ./log2lines  || echo {sysreg2-log2lines} ExitStatus = $?

after_test:
  - sh: appveyor PushArtifact log2lines.log

deploy: off

on_finish:
#   - sh: export APPVEYOR_SSH_BLOCK=true
#   - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
